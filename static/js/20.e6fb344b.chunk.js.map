{"version":3,"file":"static/js/20.e6fb344b.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/ArrowCircleLeft.js","../node_modules/@mui/icons-material/esm/ArrowCircleRight.js","pages/gallery/photos.tsx","pages/gallery/videos.tsx","pages/gallery/index.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M2 12c0 5.52 4.48 10 10 10s10-4.48 10-10S17.52 2 12 2 2 6.48 2 12m10-1h4v2h-4v3l-4-4 4-4z\"\n}), 'ArrowCircleLeft');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M22 12c0-5.52-4.48-10-10-10S2 6.48 2 12s4.48 10 10 10 10-4.48 10-10m-10 1H8v-2h4V8l4 4-4 4z\"\n}), 'ArrowCircleRight');","import { useState } from \"react\";\r\nimport { Modal } from \"../../components\";\r\nimport { ArrowCircleLeft, ArrowCircleRight } from \"@mui/icons-material\";\r\nimport { Folder } from \"../../services/models\";\r\n\r\ninterface Props {\r\n  readonly folders: ReadonlyArray<Folder>;\r\n}\r\n\r\nexport const Photos = ({folders}: Props) => {\r\n  const [currentImage, setImage] = useState<Record<string, number>>({folderIndex: -1, photoIndex: -1});\r\n\r\n  const { folderIndex, photoIndex } = currentImage;\r\n\r\n  return <div style={styles.container}>\r\n    <span style={styles.subtitle}>Gallery</span>\r\n    <span style={styles.title}>Photos</span>\r\n    {\r\n      !!folders.length && folders.map((folder, folderIndex) =>\r\n      <div style={styles.folder}>\r\n        <span style={styles.folderTitle}>{folder.name}</span>\r\n        <div style={styles.grid}>\r\n          {folder.photos.map((photo, photoIndex) =>\r\n          <img onClick={() => setImage({folderIndex, photoIndex})} style={styles.thumbnail} src={photo.thumbnailLink} alt={photo.name}/>)}\r\n        </div>\r\n        <hr style={styles.horizontalLine}/>\r\n      </div>\r\n    )}\r\n    {\r\n      folderIndex > -1 &&\r\n      photoIndex > -1 &&\r\n      <Modal title={folders[folderIndex].name} onClose={() => setImage({folderIndex: -1, photoIndex: -1})}>\r\n        <div style={styles.modal}>\r\n          <ArrowCircleLeft onClick={(e) => {\r\n            e.stopPropagation();\r\n            setImage({folderIndex, photoIndex: photoIndex - 1})\r\n          }}\r\n          style={{...styles.arrow, visibility: photoIndex > 0 ? \"visible\" : \"hidden\"}} />\r\n          <iframe src={`https://drive.google.com/file/d/${folders[folderIndex].photos[photoIndex].id}/preview`} width={\"70%\"} height={\"90%\"}/>\r\n          <ArrowCircleRight onClick={(e) => {\r\n            e.stopPropagation();\r\n            setImage({folderIndex, photoIndex: photoIndex + 1})\r\n          }}\r\n          style={{...styles.arrow, visibility: (photoIndex < folders[folderIndex].photos.length - 1) ? \"visible\" : \"hidden\"}} />\r\n        </div>\r\n      </Modal>\r\n    }\r\n  </div>\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    height: \"75vh\",\r\n    padding: \"1%\",\r\n    flexDirection: \"column\"\r\n  },\r\n  title: {\r\n    fontSize: \"xx-large\"\r\n  },  \r\n  subtitle: {\r\n    fontSize: \"x-large\"\r\n  },\r\n  folder: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  folderTitle: {\r\n    fontSize: \"x-large\"\r\n  },\r\n  horizontalLine: {\r\n    width: \"100%\",\r\n    border: \"1px solid black\"\r\n  },\r\n  photos: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(3, 1fr)\",\r\n    gap: \"1%\"\r\n  },\r\n  thumbnail: {\r\n    cursor: \"pointer\",\r\n    margin: \"1%\"\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    width: \"80%\",\r\n    height: \"80%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  arrow: {\r\n    color: \"white\",\r\n    fontSize: \"xxx-large\",\r\n    cursor: \"pointer\"\r\n  }\r\n} as Record<string, React.CSSProperties>;","import { useState } from \"react\";\r\nimport { Modal } from \"../../components\";\r\nimport { ArrowCircleLeft, ArrowCircleRight } from \"@mui/icons-material\";\r\nimport { Folder } from \"../../services/models\";\r\n\r\ninterface Props {\r\n  readonly folders: ReadonlyArray<Folder>;\r\n}\r\n\r\nexport const Videos = ({folders}: Props) => {\r\n  const [currentImage, setImage] = useState<Record<string, number>>({folderIndex: -1, videoIndex: -1});\r\n\r\n  const { folderIndex, videoIndex } = currentImage;\r\n\r\n  return <div style={styles.container}>\r\n    <span style={styles.subtitle}>Gallery</span>\r\n    <span style={styles.title}>Videos</span>\r\n    {\r\n      !!folders.length && folders.map((folder, folderIndex) =>\r\n      !!folder.videos.length &&\r\n      <div style={styles.folder}>\r\n        <span style={styles.folderTitle}>{folder.name}</span>\r\n        <div style={styles.grid}>\r\n          {folder.videos.map((video, videoIndex) =>\r\n          <img onClick={() => setImage({folderIndex, videoIndex})} style={styles.thumbnail} src={video.thumbnailLink} alt={video.name}/>)}\r\n        </div>\r\n        <hr style={styles.horizontalLine}/>\r\n      </div>\r\n    )}\r\n    {\r\n      folderIndex > -1 &&\r\n      videoIndex > -1 &&\r\n      <Modal title={folders[folderIndex].name} onClose={() => setImage({folderIndex: -1, videoIndex: -1})}>\r\n        <div style={styles.modal}>\r\n          <ArrowCircleLeft onClick={(e) => {\r\n            e.stopPropagation();\r\n            setImage({folderIndex, videoIndex: videoIndex - 1})\r\n          }}\r\n          style={{...styles.arrow, visibility: videoIndex > 0 ? \"visible\" : \"hidden\"}} />\r\n          <iframe src={`https://drive.google.com/file/d/${folders[folderIndex].videos[videoIndex].id}/preview`} width={\"70%\"} height={\"90%\"}/>\r\n          <ArrowCircleRight onClick={(e) => {\r\n            e.stopPropagation();\r\n            setImage({folderIndex, videoIndex: videoIndex + 1})\r\n          }}\r\n          style={{...styles.arrow, visibility: (videoIndex < folders[folderIndex].videos.length - 1) ? \"visible\" : \"hidden\"}} />\r\n        </div>\r\n      </Modal>\r\n    }\r\n  </div>\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    height: \"75vh\",\r\n    padding: \"1%\",\r\n    flexDirection: \"column\"\r\n  },\r\n  title: {\r\n    fontSize: \"xx-large\"\r\n  },  \r\n  subtitle: {\r\n    fontSize: \"x-large\"\r\n  },\r\n  folder: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  folderTitle: {\r\n    fontSize: \"x-large\"\r\n  },\r\n  horizontalLine: {\r\n    width: \"100%\",\r\n    border: \"1px solid black\"\r\n  },\r\n  videos: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(3, 1fr)\",\r\n    gap: \"1%\"\r\n  },\r\n  thumbnail: {\r\n    cursor: \"pointer\",\r\n    margin: \"1%\"\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    width: \"80%\",\r\n    height: \"80%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  arrow: {\r\n    color: \"white\",\r\n    fontSize: \"xxx-large\",\r\n    cursor: \"pointer\"\r\n  }\r\n} as Record<string, React.CSSProperties>;","import { useEffect, useState } from \"react\";\r\nimport { Folder, Gallery, Page, Pages } from \"../../services/models\";\r\nimport { Photos } from \"./photos\";\r\nimport { Loader } from \"../../components\";\r\nimport { Videos } from \"./videos\";\r\n\r\ninterface Props {\r\n  readonly page?: Gallery;\r\n  readonly setSubPage: (page: Page) => void;\r\n}\r\n\r\nenum Hover {\r\n  None,\r\n  Photos,\r\n  Videos\r\n}\r\n\r\nconst GalleryView = ({ page, setSubPage }: Props) => {\r\n  const [folders, setFolders] = useState<ReadonlyArray<Folder>>([]);\r\n  const [hover, setHover] = useState<Hover>(Hover.None);\r\n\r\n  useEffect(() => {\r\n    fetch(`${process.env.REACT_APP_BASE_PATH}/photos`)\r\n    .then((data) => data.json()\r\n    .then((res) => setFolders(res.filter((folder: Folder) => folder.photos.length))));\r\n  }, []);\r\n\r\n  const photos = folders.map((folder) => folder.photos).flat();\r\n  const videos = folders.map((folder) => folder.videos).flat();\r\n\r\n  return  (folders.length  \r\n    ? (page === Gallery.Photos && (<Photos folders={folders}/>)) ||\r\n      (page === Gallery.Videos && (<Videos folders={folders}/>)) ||\r\n      (<div style={styles.container}>\r\n        <span style={styles.title}>Photos</span>\r\n        {<div style={styles.thumbnails} \r\n            onMouseEnter={() => setHover(Hover.Photos)}\r\n            onMouseLeave={() => setHover(Hover.None)}>\r\n            {hover === Hover.Photos && \r\n            <div \r\n              style={styles.overlay}\r\n              onClick={() => setSubPage({page: Pages.Gallery, subPage: Gallery.Photos})}>\r\n              See More\r\n            </div>}\r\n            {photos.map((photo) =>\r\n              <img key={photo.name} style={styles.thumbnail} src={photo.thumbnailLink} alt={photo.name} />\r\n            )}\r\n          </div>}\r\n          <span style={styles.title}>Videos</span>\r\n        {<div style={styles.thumbnails} \r\n            onMouseEnter={() => setHover(Hover.Videos)}\r\n            onMouseLeave={() => setHover(Hover.None)}>\r\n            {hover === Hover.Videos && \r\n            <div \r\n              style={styles.overlay}\r\n              onClick={() => setSubPage({page: Pages.Gallery, subPage: Gallery.Videos})}>\r\n              See More\r\n            </div>}\r\n            {videos.map((video) =>\r\n              <img key={video.name} style={styles.thumbnail} src={video.thumbnailLink} alt={video.name} />\r\n            )}\r\n          </div>}\r\n        </div>)\r\n    : <Loader />)\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    height: \"max-content\",\r\n    padding: \"1%\",\r\n    flexDirection: \"column\"\r\n  },\r\n  title: {\r\n    fontSize: \"xx-large\"\r\n  },\r\n  horizontalLine: {\r\n    width: \"100%\",\r\n    border: \"1px solid black\"\r\n  },\r\n  thumbnails: {\r\n    display: \"flex\",\r\n    position: \"relative\",\r\n    overflowX: \"clip\",\r\n    cursor: \"pointer\"\r\n  },\r\n  thumbnail: {\r\n    cursor: \"pointer\",\r\n    objectFit: \"cover\"\r\n  },\r\n  arrow: {\r\n    position: \"absolute\",\r\n    color: \"black\",\r\n    fontSize: \"xxx-large\",\r\n    right: \"10\",\r\n    background: `\r\n    linear-gradient(to right, white, 95%, transparent),\r\n    linear-gradient(to top, white, 95%, transparent),\r\n    linear-gradient(to bottom, white, 95%, transparent)`,\r\n    backgroundBlendMode: \"screen\",\r\n  },\r\n  overlay: {\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    fontSize: \"xx-large\",\r\n    background: \"rgb(0,0,0,0.8)\",\r\n    color: \"white\"\r\n  }\r\n} as Record<string, React.CSSProperties>;\r\n\r\nexport default GalleryView;"],"names":["createSvgIcon","_jsx","d","Photos","_ref","folders","currentImage","setImage","useState","folderIndex","photoIndex","_jsxs","style","styles","container","children","subtitle","title","length","map","folder","folderTitle","name","grid","photos","photo","onClick","thumbnail","src","thumbnailLink","alt","horizontalLine","Modal","onClose","modal","ArrowCircleLeft","e","stopPropagation","arrow","visibility","concat","id","width","height","ArrowCircleRight","display","padding","flexDirection","fontSize","border","gridTemplateColumns","gap","cursor","margin","justifyContent","alignItems","color","Videos","videoIndex","videos","video","Hover","thumbnails","position","overflowX","objectFit","right","background","backgroundBlendMode","overlay","page","setSubPage","setFolders","hover","setHover","None","useEffect","fetch","process","then","data","json","res","filter","flat","Gallery","onMouseEnter","onMouseLeave","Pages","subPage","Loader"],"sourceRoot":""}